(function (_0x41bbb9, _0x49ff2d) {
    function _0x35f7d9(_0x63b138, _0x5e12ff, _0x503fc0, _0x441033) {
        return _0x3ffb(_0x63b138 - -0x300, _0x503fc0);
    }
    const _0x129901 = _0x41bbb9();
    function _0x58ce6e(_0x193a22, _0x54a1bc, _0x486bff, _0x501550) {
        return _0x3ffb(_0x501550 - -0xaa, _0x54a1bc);
    }
    while (!![]) {
        try {
            const _0x207bc5 = -parseInt(_0x58ce6e(0x15d, 0x15a, 0x167, 0x14e)) / (-0x266b + -0x25 * -0x2b + -0x5 * -0x671) * (parseInt(_0x35f7d9(-0x107, -0xf8, -0xf3, -0xfe)) / (0x218f + 0x2bf + 0x1226 * -0x2)) + -parseInt(_0x35f7d9(-0x123, -0x11b, -0x137, -0x111)) / (0x6f + 0x1 * -0x2033 + -0x1fc7 * -0x1) * (parseInt(_0x58ce6e(0x15f, 0x142, 0x15a, 0x14d)) / (0x1d * -0x76 + 0x3 * 0xac3 + -0x12e7)) + parseInt(_0x58ce6e(0x15a, 0x137, 0x142, 0x151)) / (-0xa7d * 0x1 + 0x14b * -0x1 + -0x13 * -0x9f) * (parseInt(_0x35f7d9(-0x129, -0x115, -0x115, -0x13f)) / (0x13 * 0x148 + -0x1fab + 0x759)) + -parseInt(_0x35f7d9(-0x10b, -0xfd, -0x115, -0x104)) / (-0x2659 + -0x248b + 0x4aeb) * (parseInt(_0x58ce6e(0x123, 0x14a, 0x13e, 0x136)) / (-0x1 * -0x82d + 0x1680 + -0xa37 * 0x3)) + -parseInt(_0x35f7d9(-0x11e, -0x11a, -0x10a, -0x103)) / (0x2439 + -0x7 * 0x16d + -0x1a35) * (parseInt(_0x58ce6e(0x13d, 0x135, 0x11b, 0x128)) / (0x1dff + -0xdf * -0xf + -0x2b06)) + parseInt(_0x35f7d9(-0x114, -0x124, -0x102, -0x129)) / (0xc * 0x19e + -0x7c3 * -0x1 + 0x3e0 * -0x7) + -parseInt(_0x58ce6e(0x143, 0x160, 0x13d, 0x149)) / (-0x1618 + 0xbe7 * -0x1 + 0x220b) * (-parseInt(_0x35f7d9(-0x119, -0x11e, -0x104, -0x116)) / (-0xe9 + 0xf97 + 0x23 * -0x6b));
            if (_0x207bc5 === _0x49ff2d)
                break;
            else
                _0x129901['push'](_0x129901['shift']());
        } catch (_0x3ce346) {
            _0x129901['push'](_0x129901['shift']());
        }
    }
}(_0x5b6e, -0x416b6 + -0x1bb47 + 0x92d73));
let handler = async (_0x44b17d, {
    usedPrefix: _0x4b99f9,
    command: _0x447d9a,
    conn: _0xca53c5
}) => {
    function _0x92968c(_0xec376d, _0x38a4c4, _0x385913, _0x5090aa) {
        return _0x3ffb(_0x385913 - -0x224, _0x5090aa);
    }
    function _0x4c0bd9(_0x4133bf, _0x34d62f, _0xae9ca7, _0x204d56) {
        return _0x3ffb(_0x204d56 - -0x1ed, _0xae9ca7);
    }
    const _0x416580 = {
        'tzZOd': 'Updating..' + _0x92968c(-0x2c, -0x1b, -0x27, -0xc),
        'lgexp': _0x92968c(-0x47, -0x5e, -0x4b, -0x46) + _0x92968c(-0x27, -0x50, -0x39, -0x3d) + 'it',
        'kwACV': function (_0x307345, _0xb92861, _0x14ee16) {
            return _0x307345(_0xb92861, _0x14ee16);
        },
        'YVUjz': function (_0x31b9ad, _0x57d569, _0x1504ed) {
            return _0x31b9ad(_0x57d569, _0x1504ed);
        },
        'uKHAk': _0x4c0bd9(-0x9, -0x25, -0x22, -0x1d) + _0x92968c(-0x2b, -0x34, -0x22, -0x2e) + _0x92968c(-0x30, -0xe, -0x24, -0x21)
    };
    try {
        _0x416580[_0x92968c(-0x35, -0x49, -0x3e, -0x38)](exec, _0x4c0bd9(-0x11, -0x27, -0x3, -0x1a) + _0x92968c(-0x48, -0x4e, -0x4a, -0x43) + _0x4c0bd9(-0x3, 0x9, -0x15, -0xa), (_0x3495a3, _0x48613f) => {
            if (_0x3495a3)
                return _0xca53c5[_0x22c08e(0x2ab, 0x2a9, 0x291, 0x29f)](_0x44b17d['chat'], eror);
            function _0x22c08e(_0x3270b1, _0x805e4d, _0x127d9e, _0x393dfd) {
                return _0x4c0bd9(_0x3270b1 - 0x14a, _0x805e4d - 0x82, _0x127d9e, _0x3270b1 - 0x2a2);
            }
            function _0x319147(_0x36fff7, _0x204122, _0x36ab0a, _0x2c6e05) {
                return _0x4c0bd9(_0x36fff7 - 0x188, _0x204122 - 0x70, _0x36ab0a, _0x204122 - 0x176);
            }
            if (_0x48613f)
                return _0xca53c5[_0x22c08e(0x2ab, 0x2bd, 0x2b0, 0x292)](_0x44b17d[_0x22c08e(0x28b, 0x284, 0x29c, 0x293)], _0x416580['tzZOd']);
        }), _0x416580[_0x92968c(-0x27, -0x3b, -0x30, -0x34)](setTimeout, () => {
            function _0x3ec96d(_0x4ef17e, _0x28d907, _0x4f295b, _0x38c4ca) {
                return _0x92968c(_0x4ef17e - 0x1e3, _0x28d907 - 0x14f, _0x4ef17e - 0x83, _0x28d907);
            }
            _0xca53c5[_0x2ce1e9(-0x96, -0x7e, -0x89, -0xab)](_0x44b17d[_0x3ec96d(0x35, 0x26, 0x3d, 0x45)], _0x2ce1e9(-0xb0, -0xbd, -0xb6, -0xa7)), _0xca53c5[_0x3ec96d(0x55, 0x41, 0x64, 0x6e)](_0x44b17d[_0x3ec96d(0x35, 0x38, 0x33, 0x46)], _0x416580[_0x3ec96d(0x62, 0x56, 0x6f, 0x56)]);
            function _0x2ce1e9(_0x3b7919, _0x43b2f4, _0xc22e4, _0x2b60b6) {
                return _0x4c0bd9(_0x3b7919 - 0x1e1, _0x43b2f4 - 0xa5, _0xc22e4, _0x3b7919 - -0x9f);
            }
            process[_0x2ce1e9(-0x8e, -0xa5, -0x94, -0x8c)]('reset');
        }, 0x2425 * -0x3 + 0x3 * -0x2117 + 0x3626 * 0x6);
    } catch (_0x13ba8e) {
        _0xca53c5['reply'](_0x44b17d[_0x92968c(-0x46, -0x3d, -0x4e, -0x56)], _0x92968c(-0x58, -0x5b, -0x45, -0x48) + 'or'), _0xca53c5[_0x92968c(-0x3a, -0x22, -0x2e, -0x17)](_0x416580[_0x92968c(-0x3b, -0x47, -0x4c, -0x42)], _0x4c0bd9(0x1f, 0x1c, 0x6, 0xd) + '𝗿𝗿𝗼𝗿\x20𝗢𝗰𝗰𝘂𝗿' + _0x4c0bd9(-0x23, 0x2, 0x2, -0xf) + _0x4c0bd9(-0x1d, 0x12, -0xf, -0x4) + util[_0x4c0bd9(-0x4, -0x24, -0x2a, -0x1c)](_0x13ba8e) + (_0x92968c(-0x62, -0x58, -0x50, -0x44) + _0x92968c(-0x4a, -0x31, -0x40, -0x44)) + (_0x4b99f9 + _0x447d9a) + (_0x4c0bd9(-0x1, 0x7, 0x12, -0x8) + _0x4c0bd9(-0xe, -0xd, 0x1, -0x12) + '𝗻𝘀\x20:\x0a\x20\x20\x20\x20\x20' + _0x92968c(-0x3b, -0x23, -0x3a, -0x25) + _0x4c0bd9(0x12, -0x6, -0x4, 0x14) + '𝗼𝗺𝗺𝗮𝗻𝗱\x0a\x20\x20\x20' + _0x92968c(-0x3a, -0x14, -0x28, -0x3f) + _0x92968c(-0x4d, -0x61, -0x4f, -0x35) + _0x4c0bd9(0x19, 0x23, -0x6, 0x12) + '𝗲\x20𝗘𝗿𝗿𝗼𝗿𝘀\x0a\x20' + _0x92968c(-0x40, -0x2e, -0x36, -0x38) + _0x4c0bd9(0x18, 0xf, 0x9, 0x5) + '𝗼𝗽𝗲𝗿𝘀\x20𝗘𝗻𝗱\x0a' + '\x20\x20\x20\x20\x20•\x20𝗗𝗮𝘁' + _0x92968c(-0x42, -0x26, -0x3c, -0x2b) + '𝗜𝘀𝘀𝘂𝗲𝘀\x20'), null, {});
    }
};
handler[_0x3639d0(0x3e7, 0x3fd, 0x419, 0x3ff)] = [_0x6b739b(-0x13a, -0x13d, -0x125, -0x116)];
function _0x6b739b(_0xf95ba5, _0x48074f, _0x462ff1, _0x4b59df) {
    return _0x3ffb(_0x462ff1 - -0x316, _0x4b59df);
}
function _0x3639d0(_0x3b5af4, _0x4caa95, _0x3cc1e2, _0x1cb590) {
    return _0x3ffb(_0x1cb590 - 0x230, _0x3cc1e2);
}
handler[_0x6b739b(-0x10e, -0x12e, -0x127, -0x134)] = ['host'], handler[_0x6b739b(-0x120, -0x125, -0x129, -0x12c)] = /^(update)$/i, handler[_0x6b739b(-0x11d, -0x14d, -0x135, -0x137)] = !![], module[_0x3639d0(0x41d, 0x430, 0x430, 0x420)] = handler;
function _0x3ffb(_0x514802, _0x4ff1ac) {
    const _0x1180c2 = _0x5b6e();
    return _0x3ffb = function (_0x2b38d8, _0x3549e7) {
        _0x2b38d8 = _0x2b38d8 - (0x19 * 0xb7 + -0x7db * -0x1 + -0x17eb);
        let _0x56c0f4 = _0x1180c2[_0x2b38d8];
        return _0x56c0f4;
    }, _0x3ffb(_0x514802, _0x4ff1ac);
}
function _0x5b6e() {
    const _0x1f436f = [
        '266348PxhxFv',
        '41OfscRo',
        '4052MKSFVE',
        '𝗨𝗵𝗼𝗵!\x20𝗮𝗻\x20𝗲',
        '2750DyooLQ',
        '\x20\x20•\x20𝗦𝗲𝗿𝘃𝗲𝗿',
        '...',
        'send',
        '\x20\x20•\x20𝗥𝘂𝗻𝘁𝗶𝗺',
        '.us',
        '𝗨𝘀𝗮𝗴𝗲\x20𝗢𝗳\x20𝗖',
        '11098165@g',
        'lgexp',
        'help',
        '1203630222',
        'format',
        '60cJvPGW',
        'docker\x20bui',
        '\x0a\x0a\x20\x20𝗖𝗼𝗺𝗺𝗮𝗻',
        '\x20𝗘𝗿𝗿𝗼𝗿\x0a\x20\x20\x20',
        'chat',
        '2478XnKQuz',
        'uKHAk',
        'Restarting',
        'ld\x20-\x20<\x20Doc',
        '𝗶𝗯𝗹𝗲\x20𝗥𝗲𝗮𝘀𝗼',
        'Updated\x20!',
        '3ANlvaJ',
        '𝗲𝗱\x20\x0a\x0a𝗘𝗿𝗿𝗼𝗿',
        'Update\x20Err',
        '71304XqXzKq',
        'rowner',
        '632673DYZpgR',
        'kerfile',
        '𝗱\x20:\x20',
        '\x0a\x20\x20\x0a\x20\x20𝗣𝗼𝘀𝘀',
        'kwACV',
        '2710773yGoMGF',
        '𝗮\x20𝗡𝗲𝘁𝘄𝗼𝗿𝗸\x20',
        '\x20:\x20',
        '•\x20𝗜𝗻𝘃𝗮𝗹𝗶𝗱\x20',
        '\x20Please\x20Wa',
        '2698388Zghdxn',
        'command',
        '\x20\x20\x20\x20•\x20𝗘𝗿𝗿𝗼',
        'tags',
        'exports',
        'update',
        '𝗿\x20𝗮𝘁\x20𝗱𝗲𝘃𝗲𝗹',
        '24acjSXn',
        'YVUjz',
        '77gTwcbt',
        'reply'
    ];
    _0x5b6e = function () {
        return _0x1f436f;
    };
    return _0x5b6e();
}
